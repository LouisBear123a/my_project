import openai
import argparse

from scanner import VulnerabilityScanner
from exploits import ExploitAttacker

# Set up OpenAI API key
openai.api_key = 'YOUR_API_KEY_HERE'

# Set up scanner and exploit attacker
scanner = VulnerabilityScanner()
exploit_attacker = ExploitAttacker()

def chat(prompt):
    # Send prompt to OpenAI API and retrieve response
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt,
        temperature=0.7,
        max_tokens=100,
        n=1,
        stop=None,
        frequency_penalty=0,
        presence_penalty=0
    )
    response_text = response.choices[0].text.strip()

    # Check if user wants to exit
    if 'exit' in response_text.lower():
        return None

    # Check if user wants to run a scan or exploit
    if 'scan' in response_text.lower():
        # Parse URL and run vulnerability scan
        url = input('Enter URL to scan: ')
        scanner.scan(url)
        return 'Scan complete. Use `show report` to see the results.'
    elif 'exploit' in response_text.lower():
        # Prompt user to select exploit and run it
        exploits = exploit_attacker.get_exploits()
        print('Available exploits:')
        for i, exploit in enumerate(exploits):
            print(f'{i+1}. {exploit["name"]}')
        selection = input('Select an exploit to run: ')
        exploit_index = int(selection) - 1
        exploit = exploits[exploit_index]
        target = input('Enter the target IP address or URL: ')
        exploit_attacker.run_exploit(exploit, target)
        return 'Exploit complete.'

    # If OpenAI API doesn't provide any relevant responses, return default message
    return "I'm sorry, I don't understand. Please try again or type `exit` to end the session."

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Chatbot for web security scanning and exploitation.')
    parser.add_argument('--debug', action='store_true', help='Enable debug logging')
    args = parser.parse_args()

    # Set up logging
    if args.debug:
        import logging
        logging.basicConfig(level=logging.DEBUG)

    # Start chat loop
    print('Welcome to the web security chatbot.')
    while True:
        prompt = input('> ')
        response = chat(prompt)
        if response is None:
            break
        print(response)
