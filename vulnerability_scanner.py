import nmap
from zap_scanner import ZapScanner
from nessus_rest import NessusAPI
from openvas_rest import OpenVASAPI

def scan_vulnerabilities(urls, open_ports, proxy_host, proxy_port):
    vulnerability_results = {}
    
    # Scan for vulnerabilities using ZAP scanner
    zap = ZapScanner()
    zap_results = zap.scan_urls(urls, open_ports, proxy_host=proxy_host, proxy_port=proxy_port)
    for url, results in zap_results.items():
        if url not in vulnerability_results:
            vulnerability_results[url] = {}
        vulnerability_results[url].update(results)

    # Scan for vulnerabilities using Nessus scanner
    nessus = NessusAPI()
    nessus.login()
    for url in urls:
        nessus_results = nessus.scan(url)
        if nessus_results:
            if url not in vulnerability_results:
                vulnerability_results[url] = {}
            vulnerability_results[url].update(nessus_results)
    nessus.logout()

    # Scan for vulnerabilities using OpenVAS scanner
    openvas = OpenVASAPI()
    openvas.login()
    for url in urls:
        openvas_results = openvas.scan(url)
        if openvas_results:
            if url not in vulnerability_results:
                vulnerability_results[url] = {}
            vulnerability_results[url].update(openvas_results)
    openvas.logout()

    return vulnerability_results
